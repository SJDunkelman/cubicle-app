// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * @returns {Promise<{ [_: string]: $models.Stat }> & { cancel(): void }}
 */
export function GetBaseStats() {
    let $resultPromise = /** @type {any} */($Call.ByID(2098763187));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {string} statName
 * @returns {Promise<number> & { cancel(): void }}
 */
export function GetNextLevelXP(statName) {
    let $resultPromise = /** @type {any} */($Call.ByID(3582367694, statName));
    return $resultPromise;
}

/**
 * @returns {Promise<{ [_: string]: $models.Stat }> & { cancel(): void }}
 */
export function GetSkillStats() {
    let $resultPromise = /** @type {any} */($Call.ByID(3394832565));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {string} statName
 * @param {number} amount
 * @returns {Promise<void> & { cancel(): void }}
 */
export function IncreaseStatXP(statName, amount) {
    let $resultPromise = /** @type {any} */($Call.ByID(3088677009, statName, amount));
    return $resultPromise;
}

/**
 * @param {string} statName
 * @param {number} xp
 * @returns {Promise<void> & { cancel(): void }}
 */
export function UpdateStat(statName, xp) {
    let $resultPromise = /** @type {any} */($Call.ByID(2552279448, statName, xp));
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.Stat.createFrom;
const $$createType1 = $Create.Map($Create.Any, $$createType0);
